{{- if and .Values.deployment.enabled .Values.global.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "project.name" . }}
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "deployment.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  selector:
    matchLabels:
      {{- include "deployment.matchLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "deployment.labels" . | nindent 8 }}
        {{- template "deployment.annotations" . }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.deployment.terminationGracePeriodSeconds | default "300" }}
      serviceAccountName: {{ .Values.deployment.serviceAccount.name | default .Values.global.namespace }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - {{ include "project.name" . }}
                topologyKey: kubernetes.io/hostname
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - {{ include "project.name" . }}
                topologyKey: topology.kubernetes.io/zone
        {{- with $.Values.deployment.podAntiAffinity }}
        podAntiAffinity:
          {{- toYaml . | nindent 6 }}
        {{- end }}
        {{- with $.Values.deployment.nodeAffinity }}
        nodeAffinity:
          {{- toYaml . | nindent 6 }}
        {{- end }}
      containers:
        - name: {{.Values.deployment.containerName | default "node" }}
          image: {{ .Values.global.image.repository }}:{{ .Values.global.image.tag }}
          imagePullPolicy: {{ .Values.global.image.pullPolicy | default "Always" | quote }}
          command: {{ .Values.deployment.command }}
          {{- with .Values.deployment.commandArgs }}
          args:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
          {{- if .Values.global.datadogApm.enabled }}
            - name: DD_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: DD_ENV
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/env']
            - name: DD_SERVICE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/service']
            - name: DD_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/version']
          {{- end }}
          {{- with $.Values.deployment.env }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.deployment.service.targetPort }}
              protocol: TCP
          {{ template "deployment.resources" . }}
          envFrom:
          {{- with $.Values.deployment.envFrom }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.deployment.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.deployment.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.deployment.livenessProbe.path }}
              port: {{ .Values.deployment.service.targetPort }}
            initialDelaySeconds: {{ .Values.deployment.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.deployment.livenessProbe.periodSeconds }}
          {{- end }}
          {{- if .Values.deployment.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.deployment.readinessProbe.path }}
              port: {{ .Values.deployment.service.targetPort }}
            initialDelaySeconds: {{ .Values.deployment.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.deployment.readinessProbe.periodSeconds }}
          {{- end }}
          {{- with .Values.deployment.lifecycleHook }}
          lifecycle:
            postStart:
              exec:
                command:
                  {{- toYaml $.Values.deployment.lifecycleHook.postStartCommand | nindent 16 }}
          {{- end }}
      {{- with .Values.deployment.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.deployment.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
          {{- end }}
      {{- with $.Values.deployment.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.deployment.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}