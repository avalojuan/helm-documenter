name: Release Charts

on:
  push:
    branches:
      - main

jobs:
  release:
    # depending on default permission settings for your org (contents being read-only or read-write for workloads), you will have to add permissions
    # see: https://docs.github.com/en/actions/security-guides/automatic-token-authentication#modifying-the-permissions-for-the-github_token
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      # 1- Update Changelog
      - name: Get Chart version from Chart.yaml
        id: chart_version
        working-directory: ./kube-app
        run: |
          CHART_VERSION=$(yq '.version' ./Chart.yaml)
          echo "chart_version=$CHART_VERSION" >> $GITHUB_OUTPUT

      - name: Get latest release version
        id: latest_release
        run: |
          LATEST_TAG=$(git tag --sort=-v:refname | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | head -n 1)
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      # Based on semantic versioning, set the release title 
      # (MAJOR, MINOR, PATCH) => (Breaking Change, Enhancement, Fix)
      - name: Set Release Title
        id: release_title
        run: |
          CHART_VERSION="${{ steps.chart_version.outputs.chart_version }}"
          LATEST_VERSION="${{ steps.latest_release.outputs.latest_tag }}"
          RELEASE_LINK="https://github.com/${GITHUB_REPOSITORY}/releases/tag/${CHART_VERSION}"
          VERSION_TITLE="[$CHART_VERSION]($RELEASE_LINK)"
          IFS='.' read -r CHART_MAJOR CHART_MINOR CHART_PATCH <<< "$CHART_VERSION"
          IFS='.' read -r LATEST_MAJOR LATEST_MINOR LATEST_PATCH <<< "$LATEST_VERSION"
          if [ "$CHART_MAJOR" != "$LATEST_MAJOR" ]; then
            TITLE="Breaking Change: $VERSION_TITLE"
            ICON="💥"
          elif [ "$CHART_MINOR" != "$LATEST_MINOR" ]; then
            TITLE="Enhancement: $VERSION_TITLE"
            ICON="✨"
          elif [ "$CHART_PATCH" != "$LATEST_PATCH" ]; then
            TITLE="Fix: $VERSION_TITLE"
            ICON="🐛"
          else
            TITLE="Release: $VERSION_TITLE"
            ICON="🚀"
          fi
          echo "release_title=$TITLE" >> $GITHUB_OUTPUT
          echo "release_icon=$ICON" >> $GITHUB_OUTPUT

      - name: Generate Release Notes
        id: notes
        uses: RedCrafter07/release-notes-action@v1.0.1
        with:
          tag-name: "${{ steps.chart_version.outputs.chart_version }}"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepend Release Notes to CHANGELOG.md
        run: |
          CHANGELOG_FILE="./kube-app/CHANGELOG.md"
          RELEASE_NOTES="${{ steps.notes.outputs.release-notes }}"
          RELEASE_TITLE="${{ steps.release_title.outputs.release_title }}"
          RELEASE_ICON="${{ steps.release_title.outputs.release_icon }}"
          RELEASE_LINK="https://github.com/${GITHUB_REPOSITORY}/releases/tag/${{ steps.chart_version.outputs.chart_version }}"
          # Create temp file with release notes and existing changelog
            { echo "## $RELEASE_ICON $(date -u +"%Y-%m-%d") - $RELEASE_TITLE"; echo; echo "$RELEASE_NOTES"; echo; cat "$CHANGELOG_FILE"; } > changelog.tmp
          mv changelog.tmp "$CHANGELOG_FILE"

      - name: Commit updated CHANGELOG.md to main
        run: |
          git add ./kube-app/CHANGELOG.md
          git commit -m "docs: update CHANGELOG.md [skip ci]"
          git push origin main

      # Release Chart
      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.7.0
        with:
          charts_dir: ./
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          CR_RELEASE_NAME_TEMPLATE: "{{ .Version }}"
          CR_RELEASE_NOTES_FILE: RELEASE.md
          CR_GENERATE_RELEASE_NOTES: "true"